@page "/fetchdata"
@using HogeBlazor.Client.Helpers
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject HttpClient Http
@inject IWebAssemblyHostEnvironment HostEnvironment

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(HostEnvironment.BaseAddress);
        @* HostEnvironment.BaseAddressはBlazor WASMが配布されているサイトのURL *@
        @* forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast"); *@
        @* TODO 本来ログインはログイン画面で行う。とりあえずAPIの動作確認のため強制ログイン *@
        var httpClient = new HttpClient();
        var authClient = new AuthClient(HostEnvironment.BaseAddress, httpClient);
        var authRequest = new AuthenticateRequest() { Email = "admin@hogeblazor", PlainPassword = "password" };
        var resp = await authClient.LoginAsync(authRequest);
        var weatherClient = new WeatherForecastClient(HostEnvironment.BaseAddress, httpClient);
        var resp2 = await weatherClient.GetAsync();
        var forecast2 = (List<WeatherForecast>)resp2;
        forecasts = forecast2.ToArray<WeatherForecast>();

        @* var client = new WeatherForecastClient("/api/v1", Http);
            var forecasts2 = (List<WeatherForecast>)(await client.GetAsync());
            forecasts = forecasts2.ToArray(); *@
    }
}
